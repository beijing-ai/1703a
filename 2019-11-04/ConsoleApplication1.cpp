// ConsoleApplication1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include "pch.h"
#include <iostream>
using namespace std;

//void BubbleSort(int a[15], int m) {
//	int t;
//	int i, j;
//	for (i = 1; i < m; i++)  //趟数
//	{
//		for (j = 0; j < m - i; j++)//每趟次数
//		{
//			if (a[j] > a[j + 1])
//			{
//				t = a[j];
//				a[j] = a[j + 1];
//				a[j + 1] = t;
//			}
//		}
//	}
//	for (i = 0; i < m;i++) {
//		cout << a[i]<<"\t";
//	}
//}
int main()
{
	//输入1 - 1000之内的10个整数到一个长度为10的数组，判断数组中的元素是否能同时被3和5整除，若能同时整除，则输出该整数。案例完成思路要求
	/*int a[10];
	for (int i=0;i<10;i++) {
		cin >> a[i];
	}

	for (int i = 0; i < 10; i++) {
		if (a[i] % 3 == 0 && a[i] % 5 == 0) {
			cout << a[i];
		}
	}*/

	//已知数组Array = { 3,8,9,4,5,6,7,2,1,0,11,12,13,15,14 }, 编程实现数组元素的输入，然后输出这15个数，编写冒泡排序算法的函数void BubbleSort(int *array, int m)，其中array为数组名，m为数组大小，调用冒泡排序算法对这15个数进行重新排序，输出重新排序后的数组元素。

	/*int a[15];
	for(int i = 0; i < 15; i++) {
		cin >> a[i];
	}
	BubbleSort(a, 15);*/



	return 0;
}


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件

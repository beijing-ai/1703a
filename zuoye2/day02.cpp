// day02.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include "pch.h"
#include <iostream>
#include <string>
#include <fstream>
using namespace std;
//void BubbleSort(int a[], int m);

//struct student_info{
//	string name[4];
//	float score[4];
//};
//void find(student_info s);

//struct Worker{
//	string name[5];
//	float price[5];
//	int number[5];
//};
int main()
{
//--------------------------------------------------------------------------------------------------------	
	/*输入1 - 1000之内的10个整数到一个长度为10的数组，
		判断数组中的元素是否能同时被3和5整除，若能同时整除，
		则输出该整数。案例完成思路要求：（共15分）
	(1)	正确定义变量，数组（2分）
	(2)	输入整数到数组中（3分)
	(3)	判断数组元素能否同时被3和5整除  （6分）
	(4)	输出能被3和5同时整除的数组元素和其下标 （4分)*/
	/*int arr[10];
	int e;
	cout << "请输入元素：";
	for (int i = 0; i < 10; i++) {
		cin >> e;
		if (e > 0 && e <= 1000) {
			arr[i] = e;
		}
		else {
			cout << "输入大小有误";
			continue;
		}
	}
	for (int i = 0; i < 10; i++) {
		if (arr[i] % 3 == 0 && arr[i] % 5 == 0) {
			cout << "数组元素为：" << arr[i] << "\t下标为：" << i << endl;
		}
	}*/


//------------------------------------------------------------------------------------------------------------------------------
	    /*已知数组Array = { 3,8,9,4,5,6,7,2,1,0,11,12,13,15,14 }, 编程实现数组元素的输入，
		然后输出这15个数，编写冒泡排序算法的函数void BubbleSort(int *array, int m)，
		其中array为数组名，m为数组大小，调用冒泡排序算法对这15个数进行重新排序，
		输出重新排序后的数组元素。*/
	/*int Array[] = {3,8,9,4,5,6,7,2,1,0,11,12,13,15,14};
	int length = sizeof(Array) / sizeof(Array[0]);
	BubbleSort(Array, length);*/



//-------------------------------------------------------------------------------------------------------------
	/*画出规范流程图  （6分）
	(2)	正确定义变量，数组，指针变量等 （4分）
	(3)	正确定义结构体（用来存放学生的姓名和成绩)（5分)
	(4)	定义结构体变量存储一个小组的4个学生的信息，利用循环赋值   （7分）
	(5)	比较4个学生的成绩，输出成绩最高的学生信息  （8分)
	(6)	提示输入要查找的姓名（4分）
	(7)	判断是否是该小组的成员，并输出正确的结果 （7分）
	(8)	如果要查找的学生是该小组学生，要求将该学生信息写入到 E盘下文件夹名为stuscore的stu_inform.txt文件中（8分）
	(9)	询问是否继续查找，是则继续，否则退出程序（2分）
	(10)	加入注释  （4分)*/
	/*student_info s;
	float max;
	cout << "请输入学生的信息：\n";
	for (int i = 0; i < 4; i++) {
		cout << "请输入第"<<i+1<<"的姓名：";
		cin >> s.name[i];
		cout << "请输入第" <<i+1<< "的成绩：";
		cin >> s.score[i];
	}
	max = s.score[0];
	int index;
	for (int i = 0; i < 4; i++) {
		
		if (s.score[i] >= max) {
			index = i;
		}
	}
	cout << "成绩最高的学生信息：" << s.name[index] << "\t" << s.score[index] << endl;
	find(s);*/


//-------------------------------------------------------------------------------------------


}



//-----------------------------------------------------------------------------------------------------
//void find(student_info s) {
//	int flag = 0;
//	int input;
//	string name;
//	cout << "请输入要查找的学生的姓名：";
//	cin >> name;
//	for (int i = 0; i < 4; i++) {
//		if (s.name[i] == name) {
//			cout << "学生信息：" << s.name[i] << "\t" << s.score[i] << endl;
//			flag = 1;
//		}
//	}
//	if (flag == 0) {
//		cout << "该学生不存在，是否继续查找：(1 or 0)";
//		cin >> input;
//		if (input == 1) {
//			find(s);
//		}
//		else {
//			cout << "退出成功！！！";
//			exit(0);
//		}
//	}
//}

//-----------------------------------------------------------------------------------------------------

//void BubbleSort(int a[], int m) {
//	int i, j,t;
//	for (i = 1; i < m; i++)
//	{
//		for (j = 1;j < m; j++)
//		{
//			if (a[j - 1] > a[j])
//			{
//				t = a[j - 1];
//				a[j - 1] = a[j];
//				a[j] = t;
//			}
//		}
//	}
//	for (i = 0; i < m; i++) {
//		cout << a[i] << '\t';
//	}
//}
